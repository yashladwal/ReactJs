{"ast":null,"code":"var _jsxFileName = \"C:\\\\Altudo_work\\\\yash\\\\git_project\\\\reactjs_work\\\\callapi\\\\src\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CrtCard = () => {\n  _s();\n\n  const [users, setUsers] = useState([]); // const getUsers = async () => {\n  //   const response = await fetch('https://api.github.com/users');\n  //   setUsers(await response.json()); \n  // }\n\n  const getUsers = () => {\n    fetch('./data.json').then(response => {\n      return response.json();\n    }).then(myJson => {\n      console.log(myJson);\n      setUsers(myJson);\n    }).catch(err => {\n      console.log(err, ' error');\n    });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"heading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cardWrap\",\n      children: users.map(crtElem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: crtElem.displayPicture,\n            alt: crtElem.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [crtElem.firstName, \" \", crtElem.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, crtElem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CrtCard, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = CrtCard;\nexport default CrtCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrtCard\");","map":{"version":3,"names":["React","useEffect","useState","CrtCard","users","setUsers","getUsers","fetch","then","response","json","myJson","console","log","catch","err","map","crtElem","displayPicture","firstName","lastName","id"],"sources":["C:/Altudo_work/yash/git_project/reactjs_work/callapi/src/Card.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nconst CrtCard = () =>{\n\n  const [users, setUsers] = useState([]);\n\n  // const getUsers = async () => {\n  //   const response = await fetch('https://api.github.com/users');\n  //   setUsers(await response.json()); \n  // }\n  \n  const getUsers =  () => {\n    \n    fetch('./data.json')\n      .then((response) => {\n        return response.json();\n      })\n      .then((myJson) => {\n        console.log(myJson);\n        setUsers(myJson)\n      }).catch((err) => {\n        console.log(err, ' error')\n      })\n  }\n\n  useEffect(() => {\n    getUsers(); \n  }, []);\n\n  return(\n    <>\n    <h1>heading</h1>\n    <section className='cardWrap' >\n      {\n      users.map((crtElem)=>{\n        return( \n          <div  key={crtElem.id}>\n              <img src={crtElem.displayPicture} alt={crtElem.firstName} />\n              <h2>{crtElem.firstName} {crtElem.lastName}</h2>\n              <p>Text</p>\n          </div> \n        )\n      })\n    }\n    </section>\n    </>\n\n  )\n}\n \n\nexport default CrtCard;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AACA,MAAMC,OAAO,GAAG,MAAK;EAAA;;EAEnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAFmB,CAInB;EACA;EACA;EACA;;EAEA,MAAMI,QAAQ,GAAI,MAAM;IAEtBC,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CAHH,EAIGF,IAJH,CAISG,MAAD,IAAY;MAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAN,QAAQ,CAACM,MAAD,CAAR;IACD,CAPH,EAOKG,KAPL,CAOYC,GAAD,IAAS;MAChBH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiB,QAAjB;IACD,CATH;EAUD,CAZD;;EAcAd,SAAS,CAAC,MAAM;IACdK,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAS,SAAS,EAAC,UAAnB;MAAA,UAEEF,KAAK,CAACY,GAAN,CAAWC,OAAD,IAAW;QACnB,oBACE;UAAA,wBACI;YAAK,GAAG,EAAEA,OAAO,CAACC,cAAlB;YAAkC,GAAG,EAAED,OAAO,CAACE;UAA/C;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,WAAKF,OAAO,CAACE,SAAb,OAAyBF,OAAO,CAACG,QAAjC;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA,GAAWH,OAAO,CAACI,EAAnB;UAAA;UAAA;UAAA;QAAA,QADF;MAOD,CARD;IAFF;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADF;AAmBD,CA9CD;;GAAMlB,O;;KAAAA,O;AAiDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}